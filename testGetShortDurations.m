% This is an autogenerated sample test for file getShortDurations.m
classdef testGetShortDurations < matlab.unittest.TestCase
    
    properties
        durations
    end
    

    methods (Test)

        function test_AllShortDurations(testCase)
            % Specify the input(s) of getShortDurations
            durationThreshold = max(testCase.durations)+seconds(1);

            % Specify the expected output(s) of getShortDurations
            expected_numberOfDurations = length(testCase.durations);
            
            % Exercise the function getShortDurations
            [actual_numberOfDurations, ~] = getShortDurations(testCase.durations, durationThreshold);

            testCase.verifyEqual(actual_numberOfDurations, expected_numberOfDurations);
        end

        function test_NoShortDurations(testCase)
            % Specify the input(s) of getShortDurations
            durationThreshold = seconds(0);

            % Specify the expected output(s) of getShortDurations
            expected_numberOfDurations = 0;
            
            % Exercise the function getShortDurations
            [actual_numberOfDurations, ~] = getShortDurations(testCase.durations, durationThreshold);

            testCase.verifyEqual(actual_numberOfDurations, expected_numberOfDurations);
        end

        function test_noDurationThresholdArgument(testCase)
            exception=[];
            try
                getShortDurations(testCase.durations);
            catch exception;
            end
            testCase.verifyEmpty(exception);
        end
        
    end
    
    methods (TestClassSetup)
        
        function durationsSetup(testCase)
            % Set up shared state for all tests.
            load timestampsCN.mat entryTimestamps exitTimestamps
            testCase.durations = exitTimestamps-entryTimestamps;

            % Tear down with testCase.addTeardown.
            testCase.addTeardown(@clear,"entryTimestamps exitTimestamps");
        end
        
    end
    
end